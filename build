#!/usr/bin/env bash
#
# TROUBLESHOOTING
#   - See the 'options' array.  Comment/uncomment lines as you see fit.
#   - If you see 'undefined reference to `clock_gettime'', try ./build -lrt instead.
#
# BUGS
#   masterpassword@lyndir.com
#
# AUTHOR
#   Maarten Billemont
#
cd "${BASH_SOURCE%/*}"
set -e

options=(
    # optional features.
    -DDEBUG                     # Turn on debugging verbosity.
   #-DEDITLINE -ledit -ltermcap # Use editline for reading the master password.
    -DREADLINE -lreadline       # Use readline for reading the master password.
)


### DEPENDENCIES

if ! [[ -e lib/scrypt/scrypt-scryptenc.o ]]; then
    # libscrypt not built.
    pushd lib/scrypt
    if [[ ! -e configure ]]; then
        # libscrypt needs configure.
        if [[ ! -e configure.ac ]]; then
            # libscrypt needs sources.
            source .source
            if hash git-svn; then
                echo
                echo "Fetching libscrypt using git-svn..."
                git-svn clone --prefix=origin/ --stdlayout "$svn" .
                printf '%s' "$(git describe --always)" > scrypt-version
            elif hash svn; then
                echo
                echo "Fetching libscrypt using svn..."
                svn checkout http://scrypt.googlecode.com/svn/trunk/ .
                printf 'r%s' "$(svn info | awk '/^Revision:/{ print $2 }')" > scrypt-version
            else
                echo >&2 "error: Missing git-svn or svn."
                echo >&2 "error: Please install either or manually check out the sources"
                echo >&2 "error: from: $home"
                echo >&2 "error: into: $PWD"
                exit 1
            fi
        fi

        # Sources available.
        echo
        echo "Generating libscrypt's build scripts..."
        aclocal
        autoheader
        autoconf
        mkdir -p config.aux
        automake --add-missing
    fi
    
    # configure available.
    echo
    echo "Building libscrypt..."
    ./configure
    make

    popd
fi

echo
echo "Building mpw..."

cc() {
    if hash llvm-gcc; then
        llvm-gcc -Qunused-arguments "$@"
    else
        gcc "$@"
    fi
}


### MPW

options+=(
    # include paths.
    -I"lib/scrypt/lib" -I"lib/scrypt/libcperciva"
    # library paths.
    -L"." -L"lib/scrypt"
    # link libraries.
    "lib/scrypt/scrypt-crypto_aesctr.o"
    "lib/scrypt/scrypt-sha256.o"
    "lib/scrypt/scrypt-crypto_scrypt-nosse.o"
    "lib/scrypt/scrypt-memlimit.o"
    "lib/scrypt/scrypt-scryptenc_cpuperf.o"
    "lib/scrypt/scrypt-scryptenc.o"
    -l"crypto"
)

cc "${options[@]}" -std=c99 -c types.c -o types.o "$@"
cc "${options[@]}" -std=c99 -l"types.o" mpw.c -o mpw "$@"
echo "done!  Now run ./install or use ./mpw"
